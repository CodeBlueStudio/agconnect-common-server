"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}},utils_1=(Object.defineProperty(exports,"__esModule",{value:!0}),exports.ConfigService=void 0,require("../utils/utils")),error_1=require("../error/error"),error_message_1=require("../error/error-message"),fs_1=__importDefault(require("fs")),path_1=__importDefault(require("path")),common_log_1=require("../log-config/common-log"),configConstants_1=require("./configConstants"),configPollingTask_1=require("./configPollingTask"),ConfigService=function(){function c(){this.configMap=new Map}return c.initialLoadServiceConfig=function(e,r){if((0,utils_1.voilidatePath)(r),!c.INSTANCES.has(e)){var o=new c;try{for(var n=fs_1.default.readFileSync(r,"utf8"),t=JSON.parse(n),i=0,a=Object.keys(t);i<a.length;i++){var s=a[i];o.configMap.set(s,t[s])}c.INSTANCES.set(e,o)}catch(e){throw new error_1.AGCError(error_message_1.ErrorCodeConstant.LOAD_SERVICE_CONFIG_ERROR)}}},c.loadCustomConfig=function(){try{var e=process.cwd(),r=fs_1.default.readdirSync(e);c.priorInstance.configMap.clear();for(var o=0;o<r.length;o++){var n=path_1.default.join(e,r[o]);if(fs_1.default.statSync(n).isFile()&&r[o].match(c.CONFIG_REGEX))for(var t=fs_1.default.readFileSync(n,"utf8"),i=JSON.parse(t),a=0,s=Object.keys(i);a<s.length;a++){var f=s[a];c.priorInstance.configMap.set(f,i[f])}}}catch(e){common_log_1.logger.error("load custom config failed",e)}},c.getService=function(e){return c.INSTANCES.has(e)?c.INSTANCES.get(e):c.priorInstance},c.startPollingTask=function(){configPollingTask_1.ConfigPollingTask.fire(configConstants_1.ConfigConstants.POLLING_EVENT.START)},c.stopPollingTask=function(){configPollingTask_1.ConfigPollingTask.fire(configConstants_1.ConfigConstants.POLLING_EVENT.STOP)},c.prototype.getConfigValue=function(e,r){return c.priorInstance.configMap.has(e)?c.priorInstance.configMap.get(e):this.configMap.has(e)?this.configMap.get(e):r},c.CONFIG_REGEX="agconnect-[\\w]+.json",c.priorInstance=new c,c.INSTANCES=new Map,c}();exports.ConfigService=ConfigService;